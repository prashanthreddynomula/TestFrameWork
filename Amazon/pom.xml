<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sample</groupId>
  <artifactId>Amazon</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>GoogleSearch</name>
  <!-- <build>
    <plugins>
        <plugin>
            <groupId>com.lazerycode.selenium</groupId>
            <artifactId>driver-binary-downloader-maven-plugin</artifactId>
            <version>1.0.17</version>
            <configuration>
                root directory that downloaded driver binaries will be stored in
                <rootStandaloneServerDirectory>/tmp/binaries</rootStandaloneServerDirectory>
                Where you want to store downloaded zip files
                <downloadedZipFileDirectory>/tmp/zips</downloadedZipFileDirectory>
                Location of a custom repository map
                <customRepositoryMap>/tmp/repo.xml</customRepositoryMap>
                This will ensure that the plugin only downloads binaries for the current OS, this will override anything specified in the <operatingSystems> configuration
                <onlyGetDriversForHostOperatingSystem>false</onlyGetDriversForHostOperatingSystem>
                Operating systems you want to download binaries for (Only valid options are: windows, linux, osx)
                <operatingSystems>
                    <windows>true</windows>
                    <linux>true</linux>
                    <mac>true</mac>
                </operatingSystems>
                Download 32bit binaries
                <thirtyTwoBitBinaries>true</thirtyTwoBitBinaries>
                Download 64bit binaries
                <sixtyFourBitBinaries>true</sixtyFourBitBinaries>
                If set to false will download every version available (Other filters will be taken into account
                <onlyGetLatestVersions>false</onlyGetLatestVersions>
                Provide a list of drivers and binary versions to download (this is a map so only one version can be specified per driver)
                <getSpecificExecutableVersions>
                    <googlechrome>18</googlechrome>
                </getSpecificExecutableVersions>
                Throw an exception if any specified binary versions that the plugin tries to download do not exist
                <throwExceptionIfSpecifiedVersionIsNotFound>false</throwExceptionIfSpecifiedVersionIsNotFound>
                Number of times to attempt to download each file
                <fileDownloadRetryAttempts>2</fileDownloadRetryAttempts>
                Number of ms to wait before timing out when trying to connect to remote server to download file
                <fileDownloadConnectTimeout>20000</fileDownloadConnectTimeout>
                Number of ms to wait before timing out when trying to read file from remote server
                <fileDownloadReadTimeout>10000</fileDownloadReadTimeout>
                Overwrite any existing binaries that have been downloaded and extracted
                <overwriteFilesThatExist>true</overwriteFilesThatExist>
                Check file hashes of downloaded files.  Default: true
                <checkFileHashes>true</checkFileHashes>
                auto detect system proxy to use when downloading files
                To specify an explicit proxy set the environment variables http.proxyHost and http.proxyPort
                <useSystemProxy>true</useSystemProxy>
            </configuration>
            <executions>
                <execution>
                    <goals>
                        <goal>selenium</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build> -->
  <dependencies>
   <dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>3.8.1</version>
	</dependency>
	<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>6.13.1</version>
    <scope>test</scope>
</dependency>

	<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.6</version>
</dependency>

<dependency>
    <groupId>org.hamcrest</groupId>
    <artifactId>hamcrest-all</artifactId>
    <version>1.3</version>
    <scope>test</scope>
</dependency>

<!-- https://mvnrepository.com/artifact/log4j/log4j -->
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
</dependency>

  </dependencies>
</project>